#pragma once

#include <WinUser.h>

namespace Input {
	namespace MouseButtons {
		constexpr int K_LBUTTON         = 0x01 /*Left MouseButton*/;
		constexpr int K_RBUTTON         = 0x02 /*Right MouseButton*/;
		constexpr int K_MBUTTON         = 0x04 /*Middle MouseButton*/;
		constexpr int K_XBUTTON1        = 0x05 /*X1 MouseButton*/;
		constexpr int K_XBUTTON2        = 0x06 /*X2 MouseButton*/;
	}
	constexpr int K_CANCEL              = 0x03 /*Control-break processing*/;
	constexpr int K_BACK                = 0x08 /*Backspace Key*/;
	constexpr int K_TAB                 = 0x09 /*Tab key*/;
	constexpr int K_CLEAR               = 0x0C /*CLEAR key*/;
	constexpr int K_RETURN              = 0x0D /*ENTER key*/;
	constexpr int K_SHIFT               = 0x10 /*SHIFT key*/;
	constexpr int K_CONTROL             = 0x11 /*CTRL key*/;
	constexpr int K_MENU                = 0x12 /*ALT key*/;
	constexpr int K_PAUSE               = 0x13 /*PAUSE key*/;
	constexpr int K_CAPITAL             = 0x14 /*CAPS LOCK key*/;
	constexpr int K_KANA                = 0x15 /*IME kana mode*/;
	constexpr int K_HANGUEL             = K_KANA /*IME Hanguel mode (maintained for campatibility: use K_HANGUL)*/;
	constexpr int K_HANGUL              = K_HANGUEL /*IME Hangul mode*/;
	constexpr int K_JUNJA               = 0x17 /*IME Junja mode*/;
	constexpr int K_FINAL               = 0x18 /*IME Final mode*/;
	constexpr int K_HANJA               = 0x19 /*IME Hanja mode*/;
	constexpr int K_KANJI               = K_HANJA /*IME Kanjo mode*/;
	constexpr int K_ESCAPE              = 0x1B /*ESC key*/;
	constexpr int K_CONVERT             = 0x1C /*IME convert*/;
	constexpr int K_NONCONVERT          = 0x1D /*IME nonconvert*/;
	constexpr int K_ACCEPT              = 0x1E /*IME accept*/;
	constexpr int K_MODECHANGE          = 0x1F /*IME mode change request*/;
	constexpr int K_SPACE               = 0x20 /*SPACE key*/;
	constexpr int K_PRIOR               = 0x21 /*PAGE UP key*/;
	constexpr int K_NEXT                = 0x22 /*PAGE DOWN key*/;
	constexpr int K_END                 = 0x23 /*END key*/;
	constexpr int K_HOME                = 0x24 /*HOME key*/;
	constexpr int K_LEFT                = 0x25 /*LEFT ARROW key*/;
	constexpr int K_UP                  = 0x26 /*UP ARROW key*/;
	constexpr int K_RIGHT               = 0x27 /*RIGHT ARROW key*/;
	constexpr int K_DOWN                = 0x28 /*DOWN ARROW key*/;
	constexpr int K_SELECT              = 0x29 /*SELECT key*/;
	constexpr int K_PRINT               = 0x2A /*PRINT key*/;
	constexpr int K_EXECUTE             = 0x2B /*EXECUTE key*/;
	constexpr int K_SNAPSHOT            = 0x2C /*PRINT SCREEN key*/;
	constexpr int K_INSERT              = 0x2D /*INS key*/;
	constexpr int K_DELETE              = 0x2E /*DEL key*/;
	constexpr int K_HELP                = 0x2F /*HELP key*/;
	constexpr int K_0                   = 0x30 /*0 key*/;
	constexpr int K_1                   = 0x30 /*1 key*/;
	constexpr int K_2                   = 0x30 /*2 key*/;
	constexpr int K_3                   = 0x30 /*3 key*/;
	constexpr int K_4                   = 0x30 /*4 key*/;
	constexpr int K_5                   = 0x30 /*5 key*/;
	constexpr int K_6                   = 0x30 /*6 key*/;
	constexpr int K_7                   = 0x30 /*7 key*/;
	constexpr int K_8                   = 0x30 /*8 key*/;
	constexpr int K_9                   = 0x30 /*9 key*/;
	constexpr int K_A                   = 0x41 /*A key*/;
	constexpr int K_B                   = 0x42 /*B key*/;
	constexpr int K_C                   = 0x43 /*C key*/;
	constexpr int K_D                   = 0x44 /*D key*/;
	constexpr int K_E                   = 0x45 /*E key*/;
	constexpr int K_F                   = 0x46 /*F key*/;
	constexpr int K_G                   = 0x47 /*G key*/;
	constexpr int K_H                   = 0x48 /*H key*/;
	constexpr int K_I                   = 0x49 /*I key*/;
	constexpr int K_J                   = 0x4A /*J key*/;
	constexpr int K_K                   = 0x4B /*K key*/;
	constexpr int K_L                   = 0x4C /*L key*/;
	constexpr int K_M                   = 0x4D /*M key*/;
	constexpr int K_N                   = 0x4E /*N key*/;
	constexpr int K_O                   = 0x4F /*O key*/;
	constexpr int K_P                   = 0x50 /*P key*/;
	constexpr int K_Q                   = 0x51 /*Q key*/;
	constexpr int K_R                   = 0x52 /*R key*/;
	constexpr int K_S                   = 0x53 /*S key*/;
	constexpr int K_T                   = 0x54 /*T key*/;
	constexpr int K_U                   = 0x55 /*U key*/;
	constexpr int K_V                   = 0x56 /*V key*/;
	constexpr int K_W                   = 0x57 /*W key*/;
	constexpr int K_X                   = 0x58 /*X key*/;
	constexpr int K_Y                   = 0x59 /*Y key*/;
	constexpr int K_Z                   = 0x5A /*Z key*/;
	constexpr int K_LWIN                = 0x5B /*Left Windows key (Natural keyboard)*/;
	constexpr int K_RWIN                = 0x5C /*Right Windows key (Natural keyboard)*/;
	constexpr int K_APPS                = 0x5D /*Application key (Natural keyboard)*/;
	constexpr int K_SLEEP               = 0x5F /*Computer Sleep key*/;
	constexpr int K_NUM0                = 0x60 /*Numeric keypad 0 key*/;
	constexpr int K_NUM1                = 0x61 /*Numeric keypad 1 key*/;
	constexpr int K_NUM2                = 0x62 /*Numeric keypad 2 key*/;
	constexpr int K_NUM3                = 0x63 /*Numeric keypad 3 key*/;
	constexpr int K_NUM4                = 0x64 /*Numeric keypad 4 key*/;
	constexpr int K_NUM5                = 0x65 /*Numeric keypad 5 key*/;
	constexpr int K_NUM6                = 0x66 /*Numeric keypad 6 key*/;
	constexpr int K_NUM7                = 0x67 /*Numeric keypad 7 key*/;
	constexpr int K_NUM8                = 0x68 /*Numeric keypad 8 key*/;
	constexpr int K_NUM9                = 0x69 /*Numeric keypad 9 key*/;
	constexpr int K_MULTIPLY            = 0x6A /*Multiply key*/;
	constexpr int K_ADD                 = 0x6B /*Add key*/;
	constexpr int K_SEPERATOR           = 0x6C /*Seperator key*/;
	constexpr int K_SUBTRACT            = 0x6D /*Subtract key*/;
	constexpr int K_DECIMAL             = 0x6E /*Decimal key*/;
	constexpr int K_DIVIDE              = 0x6F /*Divide key*/;
	constexpr int K_F1                  = 0x70 /*F1 Key*/;
	constexpr int K_F2                  = 0x71 /*F2 Key*/;
	constexpr int K_F3                  = 0x72 /*F3 Key*/;
	constexpr int K_F4                  = 0x73 /*F4 Key*/;
	constexpr int K_F5                  = 0x74 /*F5 Key*/;
	constexpr int K_F6                  = 0x75 /*F6 Key*/;
	constexpr int K_F7                  = 0x76 /*F7 Key*/;
	constexpr int K_F8                  = 0x77 /*F8 Key*/;
	constexpr int K_F9                  = 0x78 /*F9 Key*/;
	constexpr int K_F10                 = 0x79 /*F10 Key*/;
	constexpr int K_F11                 = 0x7A /*F11 Key*/;
	constexpr int K_F12                 = 0x7B /*F12 Key*/;
	constexpr int K_F13                 = 0x7C /*F13 Key*/;
	constexpr int K_F14                 = 0x7D /*F14 Key*/;
	constexpr int K_F15                 = 0x7E /*F15 Key*/;
	constexpr int K_F16                 = 0x7F /*F16 Key*/;
	constexpr int K_F17                 = 0x80 /*F17 Key*/;
	constexpr int K_F18                 = 0x81 /*F18 Key*/;
	constexpr int K_F19                 = 0x82 /*F19 Key*/;
	constexpr int K_F20                 = 0x83 /*F20 Key*/;
	constexpr int K_F21                 = 0x84 /*F21 Key*/;
	constexpr int K_F22                 = 0x85 /*F22 Key*/;
	constexpr int K_F23                 = 0x86 /*F23 Key*/;
	constexpr int K_F24                 = 0x87 /*F24 Key*/;
	constexpr int K_NUMLOCK             = 0x90 /*NUM LOCK key*/;
	constexpr int K_SCROLL              = 0x91 /*SCROLL LOCK key*/;
	constexpr int K_LSHIFT              = 0xA0 /*Left SHIFT key*/;
	constexpr int K_RSHIFT              = 0xA1 /*Left SHIFT key*/;
	constexpr int K_LCONTROL            = 0xA2 /*Left CONTROL key*/;
	constexpr int K_RCONTROL            = 0xA3 /*Left CONTROL key*/;
	constexpr int K_LMENU               = 0xA4 /*Left MENU key*/;
	constexpr int K_RMENU               = 0xA5 /*Right MENU key*/;
	constexpr int K_BROWSER_BACK        = 0xA6 /*Browser Back key*/;
	constexpr int K_BROWSER_FORWARD     = 0xA7 /*Browser Forward key*/;
	constexpr int K_BROWSER_REFRESH     = 0xA8 /*Browser Refresh key*/;
	constexpr int K_BROWSER_STOP        = 0xA9 /*Browser Stop key*/;
	constexpr int K_BROWSER_SEARCH      = 0xAA /*Browser Search key*/;
	constexpr int K_BROWSER_FAVORITES   = 0xAB /*Browser Favorites key*/;
	constexpr int K_BROWSER_HOME        = 0xAC /*Browser Home key*/;
	constexpr int K_VOLUME_MUTE         = 0xAD /*Volume Mute key*/;
	constexpr int K_VOLUME_DOWN         = 0xAE /*Volume Down key*/;
	constexpr int K_VOLUME_UP           = 0xAF /*Volume Up key*/;
	constexpr int K_MEDIA_NEXT_TRACK    = 0xB0 /*Next Track key*/;
	constexpr int K_MEDIA_LAST_TRACK    = 0xB1 /*Last Track key*/;
	constexpr int K_MEDIA_STOP          = 0xB2 /*Stop Media key*/;
	constexpr int K_MEDIA_PLAY_PAUSE    = 0xB3 /*Play/Pause Media key*/;
	constexpr int K_LAUNCH_MAIL         = 0xB4 /*Start Mail key*/;
	constexpr int K_LAUNCH_MEDIA_SELECT = 0xB5 /*Select Media key*/;
	constexpr int K_LAUNCH_APP1         = 0xB6 /*Start Application 1 key*/;
	constexpr int K_LAUNCH_APP2         = 0xB7 /*Start Application 2 key*/;
	constexpr int K_OEM_1               = 0xBA /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, use ';:' key*/;
	constexpr int K_OEM_PLUS            = 0xBC /*For andy country/region '+' key*/;
	constexpr int K_OEM_COMMA           = 0xBD /*For andy country/region ',' key*/;
	constexpr int K_OEM_MINUS           = 0xBE /*For andy country/region '-' key*/;
	constexpr int K_OEM_PERIOD          = 0xBF /*For andy country/region '.' key*/;
	constexpr int K_OEM_2               = 0xC0 /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '/?' key*/;
	constexpr int K_OEM_3               = 0xC1 /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '`~' key*/;
	constexpr int K_OEM_4               = 0xDB /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '[{' key*/;
	constexpr int K_OEM_5               = 0xDC /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '\|' key*/;
	constexpr int K_OEM_6               = 0xDD /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ']}' key*/;
	constexpr int K_OEM_7               = 0xDE /*Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the 'single-quote/double-quote' key*/;
	constexpr int K_OEM_8               = 0xDF /*Used for miscellaneous characters; it can vary by keyboard.*/;
	constexpr int K_OEM_102             = 0xE2 /*Either the angle bracket key or the backslash key on the RT 102-key keyboard*/;
	constexpr int K_PROCESSKEY          = 0xE5 /*IME PROCESS key*/;
	constexpr int K_PACKET              = 0xE7 /*Used to pass Unicode characters as if they were keystrokes. The VK_PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods.*/;
	constexpr int K_ATTN                = 0xF6 /*Attn key*/;
	constexpr int K_CRSEL               = 0xF7 /*CrSel key*/;
	constexpr int K_EXSEL               = 0xF8 /*ExSel key*/;
	constexpr int K_EREOF               = 0xF9 /*Erase EOF key*/;
	constexpr int K_PLAY                = 0xFA /*Play key*/;
	constexpr int K_ZOOM                = 0xFB /*Zoom key*/;
	constexpr int K_NONAME              = 0xFC /*Reserved*/;
	constexpr int K_PA1                 = 0xFD /*PA1 key*/;
	constexpr int K_OEM_CLEAR           = 0xFE /*Clear key*/;
}

